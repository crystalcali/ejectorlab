// static/script.js

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –≤–∫–ª–∞–¥–æ–∫
function openTab(tabName, event) {
    // –°–∫—Ä—ã—Ç—å –≤—Å–µ –≤–∫–ª–∞–¥–∫–∏
    const tabs = document.getElementsByClassName('tab-content');
    for (let tab of tabs) {
        tab.classList.remove('active');
    }

    // –£–±—Ä–∞—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–π –∫–ª–∞—Å—Å —Å –≤—Å–µ—Ö —Ç–∞–±–æ–≤
    const tabButtons = document.getElementsByClassName('tab');
    for (let btn of tabButtons) {
        btn.classList.remove('active');
    }

    // –ü–æ–∫–∞–∑–∞—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—É—é –≤–∫–ª–∞–¥–∫—É –∏ —Å–¥–µ–ª–∞—Ç—å –µ—ë –∞–∫—Ç–∏–≤–Ω–æ–π
    document.getElementById(tabName).classList.add('active');
    event.currentTarget.classList.add('active');
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–º–µ–Ω—ã –ø–æ–ª–µ–π –≤—ã–±–æ—Ä–∞ –≤ –≤–æ–¥–æ–≤–æ–∑–¥—É—à–Ω–æ–º —ç–∂–µ–∫—Ç–æ—Ä–µ
function toggleChoiceFields() {
    const choice = document.getElementById('choice').value;
    const uoGroup = document.getElementById('uo-group');
    const PcGroup = document.getElementById('Pc-group');

    if (choice === 'uo') {
        uoGroup.style.display = 'flex';
        PcGroup.style.display = 'none';
    } else if (choice === 'Pc') {
        uoGroup.style.display = 'none';
        PcGroup.style.display = 'flex';
    } else {
        uoGroup.style.display = 'none';
        PcGroup.style.display = 'none';
    }
}

// –ü–æ–ª—É—á–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
const gasImage = document.getElementById('gasImage');

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–º–µ–Ω—ã —Ç–µ–º—ã –∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
function toggleTheme() {
    const currentTheme = document.documentElement.getAttribute('data-theme');
    if (currentTheme === 'dark') {
        document.documentElement.setAttribute('data-theme', 'light');
        document.querySelector('.theme-switcher').innerText = 'üåô';
        gasImage.src = "../static/res/draw_gas_ejector.png"; // –°–≤–µ—Ç–ª–∞—è —Ç–µ–º–∞
    } else {
        document.documentElement.setAttribute('data-theme', 'dark');
        document.querySelector('.theme-switcher').innerText = '‚òÄÔ∏è';
        gasImage.src = "../static/res/draw_gas_ejector_dark.png"; // –¢—ë–º–Ω–∞—è —Ç–µ–º–∞
    }
}

// –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–ø–∏–Ω–Ω–µ—Ä–æ–º
function showGlobalSpinner() {
    document.getElementById('global-spinner').style.display = 'flex';
}

function hideGlobalSpinner() {
    document.getElementById('global-spinner').style.display = 'none';
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã –≤–æ–¥–æ–≤–æ–∑–¥—É—à–Ω–æ–≥–æ —ç–∂–µ–∫—Ç–æ—Ä–∞
document.getElementById('water-air-form').addEventListener('submit', function(e) {
    e.preventDefault();

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–ø–∏–Ω–Ω–µ—Ä
    showGlobalSpinner();
    document.getElementById('water-air-output').innerHTML = ''; // –û—á–∏—Å—Ç–∏—Ç—å –ø—Ä–µ–¥—ã–¥—É—â–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    
    
    const choice = document.getElementById('choice').value;
    const uo = document.getElementById('uo').value;
    const Pc = document.getElementById('Pc').value;
    const G_air = document.getElementById('G_air').value;
    const P_water = document.getElementById('P_water').value;
    const P_air = document.getElementById('P_air').value;
    const T_water = document.getElementById('T_water').value;
    const T_air = document.getElementById('T_air').value;

    fetch('/calculate_water_air', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({
            G_air: G_air,
            P_water: P_water,
            P_air: P_air,
            T_water: T_water,
            T_air: T_air,
            choice: choice,
            uo: uo,
            Pc: Pc
        })
    })
    .then(response => response.json())
    .then(data => {
        hideGlobalSpinner();

        if(data.status === 'success') {
            let output = '';
            for (const [key, value] of Object.entries(data.results)) {
                output += `<p><strong>${key}:</strong> ${value}</p>`;
            }
            document.getElementById('water-air-output').innerHTML = output;
        } else {
            document.getElementById('water-air-output').innerHTML = `<p style="color:red;">–û—à–∏–±–∫–∞: ${data.message}</p>`;
        }
    })
    .catch(error => {
        hideGlobalSpinner();
        document.getElementById('water-air-output').innerHTML = `<p style="color:red;">–û—à–∏–±–∫–∞: ${error}</p>`;
    });
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã –≥–∞–∑–æ—Å—Ç—Ä—É–π–Ω–æ–≥–æ —ç–∂–µ–∫—Ç–æ—Ä–∞
document.getElementById('gas-form').addEventListener('submit', function(e) {
    e.preventDefault();

    showGlobalSpinner();
    document.getElementById('gas-output').innerHTML = ''; // –û—á–∏—Å—Ç–∏—Ç—å –ø—Ä–µ–¥—ã–¥—É—â–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã

    const Gr = document.getElementById('Gr').value;
    const Gi = document.getElementById('Gi').value;
    const Pr = document.getElementById('Pr').value;
    const Pi = document.getElementById('Pi').value;
    const Tr = document.getElementById('Tr').value;
    const Ti = document.getElementById('Ti').value;
    const Rr = document.getElementById('Rr').value;
    const Ri = document.getElementById('Ri').value;
    const kr = document.getElementById('kr').value;
    const ki = document.getElementById('ki').value;
    const state_model_r = document.getElementById('state_model_r').value;
    const state_model_i = document.getElementById('state_model_i').value;

    fetch('/calculate_gas_ejector', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({
            Gr: Gr,
            Gi: Gi,
            Pr: Pr,
            Pi: Pi,
            Tr: Tr,
            Ti: Ti,
            Rr: Rr,
            Ri: Ri,
            kr: kr,
            ki: ki,
            state_model_r: state_model_r,
            state_model_i: state_model_i
        })
    })
    .then(response => response.json())
    .then(data => {
        hideGlobalSpinner();

        if(data.status === 'success') {
            let output = '';
            for (const [key, value] of Object.entries(data.results)) {
                output += `<p><strong>${key}:</strong> ${value}</p>`;
            }
            document.getElementById('gas-output').innerHTML = output;
        } else {
            document.getElementById('gas-output').innerHTML = `<p style="color:red;">–û—à–∏–±–∫–∞: ${data.message}</p>`;
        }
    })
    .catch(error => {
        hideGlobalSpinner();
        document.getElementById('gas-output').innerHTML = `<p style="color:red;">–û—à–∏–±–∫–∞: ${error}</p>`;
    });
});

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ—Å—á–µ—Ç–∞ –∑–Ω–∞—á–µ–Ω–∏–π –∫ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–º –µ–¥–∏–Ω–∏—Ü–∞–º
// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ—Å—á–µ—Ç–∞ –∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∑–Ω–∞—á–µ–Ω–∏–π –≤ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –µ–¥–∏–Ω–∏—Ü–µ
function updateDisplayedValue(inputId, unitId) {
    const inputField = document.getElementById(inputId);
    const unitField = document.getElementById(unitId);
    let value = parseFloat(inputField.value);
    
    if (isNaN(value)) return;

    switch (unitField.value) {
        case "–∫–≥/—á":
            inputField.value = (value * 3600).toFixed(4); // –ü–µ—Ä–µ–≤–æ–¥ –∫–≥/—Å –≤ –∫–≥/—á –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
            break;
        case "–∫–≥/—Å":
            inputField.value = (value / 3600).toFixed(4); // –ü–µ—Ä–µ–≤–æ–¥ –∫–≥/—á –≤ –∫–≥/—Å –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
            break;
        case "–ú–ü–∞":
            inputField.value = (value / 1000000).toFixed(2); // –ü–µ—Ä–µ–≤–æ–¥ –ü–∞ –≤ –ú–ü–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
            break;
        case "–∞—Ç–º":
            inputField.value = (value / 101325).toFixed(2); // –ü–µ—Ä–µ–≤–æ–¥ –ü–∞ –≤ –∞—Ç–º –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
            break;
        case "–ü–∞":
            // –ü–∞ ‚Äì —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –µ–¥–∏–Ω–∏—Ü–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è, –Ω–µ—Ç –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è
            break;
        case "C":
            inputField.value = (value - 273.15).toFixed(1); // –ü–µ—Ä–µ–≤–æ–¥ K –≤ ¬∞C –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
            break;
        case "K":
            inputField.value = (value + 273.15).toFixed(1); // –ü–µ—Ä–µ–≤–æ–¥ ¬∞C –≤ K –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
            break;
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ –∑–Ω–∞—á–µ–Ω–∏–π –≤ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –µ–¥–∏–Ω–∏—Ü—ã –ø–µ—Ä–µ–¥ –ø–µ—Ä–µ–¥–∞—á–µ–π
function convertToStandardValue(inputId, unit) {
    let value = parseFloat(document.getElementById(inputId).value);

    if (isNaN(value)) return value; // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –∫–∞–∫ –µ—Å—Ç—å, –µ—Å–ª–∏ –æ–Ω–æ –Ω–µ —á–∏—Å–ª–æ

    switch (unit) {
        case "–∫–≥/—á":
            return value / 3600; // –ü–µ—Ä–µ–≤–æ–¥ –≤ –∫–≥/—Å
        case "–ú–ü–∞":
            return value * 1000000; // –ü–µ—Ä–µ–≤–æ–¥ –≤ –ü–∞
        case "–∞—Ç–º":
            return value * 101325; // –ü–µ—Ä–µ–≤–æ–¥ –≤ –ü–∞
        case "C":
            return value + 273.15; // –ü–µ—Ä–µ–≤–æ–¥ –≤ K
        default:
            return value; // –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –µ–¥–∏–Ω–∏—Ü—ã (–∫–≥/—Å, –ü–∞, K) –Ω–µ —Ç—Ä–µ–±—É—é—Ç –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è
    }
}

const fields = ["Gr", "Gi", "Pr", "Pi", "Tr", "Ti"];

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –≤–≤–æ–¥–∞
function updateStandardValue(inputId, unitId) {
    const inputField = document.getElementById(inputId);
    const unitField = document.getElementById(unitId);
    let displayedValue = parseFloat(inputField.value.replace(',', '.'));

    if (isNaN(displayedValue)) {
        inputField.dataset.standardValue = '';
        return;
    }

    let standardValue;

    switch (unitField.value) {
        case "–∫–≥/—á":
            standardValue = displayedValue / 3600; // –ü–µ—Ä–µ–≤–æ–¥ –≤ –∫–≥/—Å
            break;
        case "–∫–≥/—Å":
            standardValue = displayedValue; // –∫–≥/—Å ‚Äì —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –µ–¥–∏–Ω–∏—Ü–∞
            break;
        case "–ú–ü–∞":
            standardValue = displayedValue * 1e6; // –ü–µ—Ä–µ–≤–æ–¥ –≤ –ü–∞
            break;
        case "–∞—Ç–º":
            standardValue = displayedValue * 101325; // –ü–µ—Ä–µ–≤–æ–¥ –≤ –ü–∞
            break;
        case "–ü–∞":
            standardValue = displayedValue; // –ü–∞ ‚Äì —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –µ–¥–∏–Ω–∏—Ü–∞
            break;
        case "C":
            standardValue = displayedValue + 273.15; // –ü–µ—Ä–µ–≤–æ–¥ –≤ K
            break;
        case "K":
            standardValue = displayedValue; // K ‚Äì —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –µ–¥–∏–Ω–∏—Ü–∞
            break;
        default:
            standardValue = displayedValue; // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –ø—Ä–∏–Ω–∏–º–∞–µ–º –≤–≤–µ–¥—ë–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
            break;
    }

    inputField.dataset.standardValue = standardValue;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ—Å—á–µ—Ç–∞ –∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∑–Ω–∞—á–µ–Ω–∏–π –≤ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –µ–¥–∏–Ω–∏—Ü–µ
function updateDisplayedValue(inputId, unitId) {
    const inputField = document.getElementById(inputId);
    const unitField = document.getElementById(unitId);
    let standardValue = parseFloat(inputField.dataset.standardValue);

    if (isNaN(standardValue)) return;

    let displayedValue;

    switch (unitField.value) {
        case "–∫–≥/—á":
            displayedValue = (standardValue * 3600).toFixed(4); // –ü–µ—Ä–µ–≤–æ–¥ –∫–≥/—Å –≤ –∫–≥/—á –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
            break;
        case "–∫–≥/—Å":
            displayedValue = standardValue.toFixed(4); // –∫–≥/—Å ‚Äì —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –µ–¥–∏–Ω–∏—Ü–∞
            break;
        case "–ú–ü–∞":
            displayedValue = (standardValue / 1e6).toFixed(2); // –ü–µ—Ä–µ–≤–æ–¥ –ü–∞ –≤ –ú–ü–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
            break;
        case "–∞—Ç–º":
            displayedValue = (standardValue / 101325).toFixed(2); // –ü–µ—Ä–µ–≤–æ–¥ –ü–∞ –≤ –∞—Ç–º –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
            break;
        case "–ü–∞":
            displayedValue = standardValue.toFixed(0); // –ü–∞ ‚Äì —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –µ–¥–∏–Ω–∏—Ü–∞
            break;
        case "C":
            displayedValue = (standardValue - 273.15).toFixed(1); // –ü–µ—Ä–µ–≤–æ–¥ K –≤ ¬∞C –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
            break;
        case "K":
            displayedValue = standardValue.toFixed(1); // K ‚Äì —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –µ–¥–∏–Ω–∏—Ü–∞
            break;
        default:
            displayedValue = standardValue.toFixed(2); // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
            break;
    }

    inputField.value = displayedValue;
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏ –ø—Ä–∏–≤—è–∑–∫–∞ —Å–æ–±—ã—Ç–∏–π
fields.forEach(fieldId => {
    const inputField = document.getElementById(fieldId);
    const unitField = document.getElementById(fieldId + "_unit");

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
    updateStandardValue(fieldId, fieldId + "_unit");

    // –ü—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –∑–Ω–∞—á–µ–Ω–∏—è –æ–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    inputField.addEventListener("input", function() {
        updateStandardValue(fieldId, fieldId + "_unit");
        updateDisplayedValue(fieldId, fieldId + "_unit");
    });

    // –ü—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –µ–¥–∏–Ω–∏—Ü—ã –æ–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
    unitField.addEventListener("change", function() {
        updateDisplayedValue(fieldId, fieldId + "_unit");
    });
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã
document.getElementById('gas-form').addEventListener('submit', function(e) {
    e.preventDefault();

    const data = {};

    fields.forEach(fieldId => {
        const inputField = document.getElementById(fieldId);
        let standardValue = parseFloat(inputField.dataset.standardValue);

        if (!isNaN(standardValue)) {
            data[fieldId] = standardValue;
        } else {
            data[fieldId] = null; // –ò–ª–∏ –æ–±—Ä–∞–±–æ—Ç–∞–π—Ç–µ –∫–∞–∫ —Ç—Ä–µ–±—É–µ—Ç—Å—è, –µ—Å–ª–∏ –∑–Ω–∞—á–µ–Ω–∏–µ –Ω–µ —á–∏—Å–ª–æ
        }
    });

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä
    fetch('/calculate_gas_ejector', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify(data)
    })
    .then(response => response.json())
    .then(data => {
        if(data.status === 'success') {
            let output = '';
            for (const [key, value] of Object.entries(data.results)) {
                output += `<p><strong>${key}:</strong> ${value}</p>`;
            }
            document.getElementById('gas-output').innerHTML = output;
        } else {
            document.getElementById('gas-output').innerHTML = `<p style="color:red;">–û—à–∏–±–∫–∞: ${data.message}</p>`;
        }
    })
    .catch(error => {
        document.getElementById('gas-output').innerHTML = `<p style="color:red;">–û—à–∏–±–∫–∞: ${error}</p>`;
    });
});

// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å —Ç–µ–∫—É—â–µ–π —Ç–µ–º–æ–π
document.addEventListener('DOMContentLoaded', () => {
    let currentTheme = document.documentElement.getAttribute('data-theme');

    if (!currentTheme) { // –ï—Å–ª–∏ —Ç–µ–º–∞ –µ—â—ë –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞
        const prefersDark = window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches;
        if (prefersDark) {
            document.documentElement.setAttribute('data-theme', 'dark');
            gasImage.src = "../static/res/draw_gas_ejector_dark.png";
            document.querySelector('.theme-switcher').innerText = '‚òÄÔ∏è';
        } else {
            document.documentElement.setAttribute('data-theme', 'light');
            gasImage.src = "../static/res/draw_gas_ejector.png";
            document.querySelector('.theme-switcher').innerText = 'üåô';
        }
    } else {
        // –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–æ–≥–ª–∞—Å–Ω–æ —Ç–µ–∫—É—â–µ–π —Ç–µ–º–µ
        if (currentTheme === 'dark') {
            gasImage.src = "../static/res/draw_gas_ejector_dark.png";
            document.querySelector('.theme-switcher').innerText = '‚òÄÔ∏è';
        } else {
            gasImage.src = "../static/res/draw_gas_ejector.png";
            document.querySelector('.theme-switcher').innerText = 'üåô';
        }
    }
});
